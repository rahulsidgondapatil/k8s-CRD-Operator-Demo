apiVersion: customcontroller.k8s.io/v1alpha1
kind: DepSvcResource
metadata:
  name: fserver
  namespace: default
  finalizers:
  - finalizer.customcontroller.k8s.io  
  annotations:
    auto-create-svc: "yes"
    auto-create-svc-type: "NodePort"
spec:
  replicas: 3                  # Number of pods to run at any given time
  selector:
    matchLabels:
      app: fserver        # This deployment applies to any Pods matching the specified label
  template:                      # This deployment will create a set of pods using the configurations in this template
    metadata:
      labels: # The labels that will be applied to all of the pods in this deployment
        app: fserver
    spec:
      volumes:
        - name: shared
          emptyDir: {}
      initContainers:
        - name: deploy
          image: busybox
          volumeMounts:
            - name: shared
              mountPath: /tmp/
          command: ["/bin/sh"]
          args: ["-c", "echo 'I am learning kubernetes' > /tmp/test.txt"] # Spec for the container which will run in the Pod
      containers:
        - name: fserver
          image: rahulsidgondapatil/fserver
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: shared
              mountPath: /tmp/
          ports:
            - containerPort: 8080 # Should match the port number that the Go application listens on
          env:
            - name: REDIS_SERVICE
              value: "stateful-redis"
            - name: REDIS_PORT
              value: "6379"
          livenessProbe: # To check the health of the Pod
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 15
            timeoutSeconds: 5
          readinessProbe: # To check if the Pod is ready to serve traffic or not
            httpGet:
              path: /file
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            failureThreshold: 1
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 1
      restartPolicy: Always
